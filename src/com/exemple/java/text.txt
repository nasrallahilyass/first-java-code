What is an Abstract Class?
An abstract class serves as a blueprint for creating concrete classes.
It provides a foundation for defining abstract methods,
which inheriting subclasses are required to implement.

Abstract Class in Java:
An abstract class in Java is a class declared with the abstract keyword.
It can contain:
* Abstract methods (methods without a body, only a signature).
* Non-abstract methods (concrete methods with a body).

Key Characteristics of Abstract Classes:
*Abstract methods:
    These do not have a body, only a method prototype or signature.
*Non-abstract methods:
    These have full implementations and can be inherited directly by subclasses.

Rules for Abstract Classes:
* An abstract class must be declared with the abstract keyword.
* It can include both abstract and non-abstract methods.
* Abstract classes cannot be instantiated (you cannot create objects of an abstract class).
* It can have final methods, which prevent subclasses from overriding their implementation.
* Abstract classes can also have:
* Constructors to initialize fields.
* Static methods, which belong to the class itself rather than an instance.

Benefits of Abstract Class (Distribution of tasks)
Polymorphism Using Abstract Classes.